{"ast":null,"code":"var _jsxFileName = \"/Users/denisefeliciatiowanni/Documents/Denise/denaur-wrapped/src/components/WrappedApp.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { useSwipeable } from \"react-swipeable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapped = () => {\n  _s();\n  const images = Array.from({\n    length: 12\n  }, (_, i) => `/images/${i + 1}.png`);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [isPaused, setIsPaused] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [touchStartTime, setTouchStartTime] = useState(0);\n  const slideDuration = 5000;\n  const resetProgress = useCallback(() => {\n    setProgress(0);\n  }, []);\n  const handleNext = useCallback(() => {\n    resetProgress();\n    setCurrentIndex(prev => (prev + 1) % images.length);\n  }, [resetProgress, images.length]);\n  const handlePrevious = useCallback(() => {\n    resetProgress();\n    setCurrentIndex(prev => (prev - 1 + images.length) % images.length);\n  }, [resetProgress, images.length]);\n\n  // Progress bar animation\n  useEffect(() => {\n    if (isPaused) return;\n    const interval = setInterval(() => {\n      setProgress(prev => {\n        if (prev >= 100) {\n          handleNext();\n          return 0;\n        }\n        return prev + 100 / (slideDuration / 100);\n      });\n    }, 100);\n    return () => clearInterval(interval);\n  }, [isPaused, handleNext, slideDuration]);\n\n  // Touch and swipe handlers\n  const swipeHandlers = useSwipeable({\n    onSwipedLeft: handleNext,\n    onSwipedRight: handlePrevious,\n    preventDefaultTouchmoveEvent: true,\n    trackMouse: true\n  });\n  const handleTouchStart = e => {\n    setTouchStartTime(Date.now());\n    setIsPaused(true);\n  };\n  const handleTouchEnd = e => {\n    const touchDuration = Date.now() - touchStartTime;\n    setIsPaused(false);\n\n    // Only trigger tap if touch duration is less than 200ms\n    if (touchDuration < 200) {\n      // Detect left/right side tap\n      const touchX = e.changedTouches ? e.changedTouches[0].clientX : e.clientX;\n      const element = e.currentTarget;\n      const rect = element.getBoundingClientRect();\n      const isRightSide = touchX > rect.left + rect.width / 2;\n      if (isRightSide) {\n        handleNext();\n      } else {\n        handlePrevious();\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen w-full bg-black flex items-center justify-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative w-full max-w-[375px] h-[667px] bg-black overflow-hidden\",\n      style: {\n        aspectRatio: '375/667'\n      },\n      ...swipeHandlers,\n      onTouchStart: handleTouchStart,\n      onTouchEnd: handleTouchEnd,\n      onMouseDown: handleTouchStart,\n      onMouseUp: handleTouchEnd,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute top-0 left-0 w-full h-1 bg-gray-800 z-20\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-full bg-green-500\",\n          style: {\n            width: `${progress}%`,\n            transition: isPaused ? \"none\" : \"width 0.1s linear\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative w-full h-full\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: images[currentIndex],\n          alt: `Slide ${currentIndex + 1}`,\n          className: \"absolute inset-0 w-full h-full object-cover transition-opacity duration-300\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute inset-0 z-10 flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-1/2 h-full\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-1/2 h-full\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(Wrapped, \"SPrp4YHZuCCyW9ZRqSjq9dWvywM=\", false, function () {\n  return [useSwipeable];\n});\n_c = Wrapped;\nexport default Wrapped;\nvar _c;\n$RefreshReg$(_c, \"Wrapped\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useSwipeable","jsxDEV","_jsxDEV","Wrapped","_s","images","Array","from","length","_","i","currentIndex","setCurrentIndex","isPaused","setIsPaused","progress","setProgress","touchStartTime","setTouchStartTime","slideDuration","resetProgress","handleNext","prev","handlePrevious","interval","setInterval","clearInterval","swipeHandlers","onSwipedLeft","onSwipedRight","preventDefaultTouchmoveEvent","trackMouse","handleTouchStart","e","Date","now","handleTouchEnd","touchDuration","touchX","changedTouches","clientX","element","currentTarget","rect","getBoundingClientRect","isRightSide","left","width","className","children","style","aspectRatio","onTouchStart","onTouchEnd","onMouseDown","onMouseUp","transition","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["/Users/denisefeliciatiowanni/Documents/Denise/denaur-wrapped/src/components/WrappedApp.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport { useSwipeable } from \"react-swipeable\";\n\nconst Wrapped = () => {\n  const images = Array.from({ length: 12 }, (_, i) => `/images/${i + 1}.png`);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [isPaused, setIsPaused] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [touchStartTime, setTouchStartTime] = useState(0);\n  const slideDuration = 5000;\n\n  const resetProgress = useCallback(() => {\n    setProgress(0);\n  }, []);\n\n  const handleNext = useCallback(() => {\n    resetProgress();\n    setCurrentIndex((prev) => (prev + 1) % images.length);\n  }, [resetProgress, images.length]);\n\n  const handlePrevious = useCallback(() => {\n    resetProgress();\n    setCurrentIndex((prev) => (prev - 1 + images.length) % images.length);\n  }, [resetProgress, images.length]);\n\n  // Progress bar animation\n  useEffect(() => {\n    if (isPaused) return;\n\n    const interval = setInterval(() => {\n      setProgress((prev) => {\n        if (prev >= 100) {\n          handleNext();\n          return 0;\n        }\n        return prev + (100 / (slideDuration / 100));\n      });\n    }, 100);\n\n    return () => clearInterval(interval);\n  }, [isPaused, handleNext, slideDuration]);\n\n  // Touch and swipe handlers\n  const swipeHandlers = useSwipeable({\n    onSwipedLeft: handleNext,\n    onSwipedRight: handlePrevious,\n    preventDefaultTouchmoveEvent: true,\n    trackMouse: true\n  });\n\n  const handleTouchStart = (e) => {\n    setTouchStartTime(Date.now());\n    setIsPaused(true);\n  };\n\n  const handleTouchEnd = (e) => {\n    const touchDuration = Date.now() - touchStartTime;\n    setIsPaused(false);\n    \n    // Only trigger tap if touch duration is less than 200ms\n    if (touchDuration < 200) {\n      // Detect left/right side tap\n      const touchX = e.changedTouches ? e.changedTouches[0].clientX : e.clientX;\n      const element = e.currentTarget;\n      const rect = element.getBoundingClientRect();\n      const isRightSide = touchX > rect.left + rect.width / 2;\n      \n      if (isRightSide) {\n        handleNext();\n      } else {\n        handlePrevious();\n      }\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen w-full bg-black flex items-center justify-center\">\n      <div \n        className=\"relative w-full max-w-[375px] h-[667px] bg-black overflow-hidden\"\n        style={{ aspectRatio: '375/667' }}\n        {...swipeHandlers}\n        onTouchStart={handleTouchStart}\n        onTouchEnd={handleTouchEnd}\n        onMouseDown={handleTouchStart}\n        onMouseUp={handleTouchEnd}\n      >\n        {/* Progress Bar */}\n        <div className=\"absolute top-0 left-0 w-full h-1 bg-gray-800 z-20\">\n          <div\n            className=\"h-full bg-green-500\"\n            style={{\n              width: `${progress}%`,\n              transition: isPaused ? \"none\" : \"width 0.1s linear\"\n            }}\n          />\n        </div>\n\n        {/* Current Image */}\n        <div className=\"relative w-full h-full\">\n          <img\n            src={images[currentIndex]}\n            alt={`Slide ${currentIndex + 1}`}\n            className=\"absolute inset-0 w-full h-full object-cover transition-opacity duration-300\"\n          />\n        </div>\n\n        {/* Touch Areas */}\n        <div className=\"absolute inset-0 z-10 flex\">\n          <div className=\"w-1/2 h-full\" />\n          <div className=\"w-1/2 h-full\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Wrapped;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC/D,SAASC,YAAY,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAMC,MAAM,GAAGC,KAAK,CAACC,IAAI,CAAC;IAAEC,MAAM,EAAE;EAAG,CAAC,EAAE,CAACC,CAAC,EAAEC,CAAC,KAAK,WAAWA,CAAC,GAAG,CAAC,MAAM,CAAC;EAC3E,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAM,CAACgB,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACkB,QAAQ,EAAEC,WAAW,CAAC,GAAGnB,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACoB,cAAc,EAAEC,iBAAiB,CAAC,GAAGrB,QAAQ,CAAC,CAAC,CAAC;EACvD,MAAMsB,aAAa,GAAG,IAAI;EAE1B,MAAMC,aAAa,GAAGrB,WAAW,CAAC,MAAM;IACtCiB,WAAW,CAAC,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,UAAU,GAAGtB,WAAW,CAAC,MAAM;IACnCqB,aAAa,CAAC,CAAC;IACfR,eAAe,CAAEU,IAAI,IAAK,CAACA,IAAI,GAAG,CAAC,IAAIjB,MAAM,CAACG,MAAM,CAAC;EACvD,CAAC,EAAE,CAACY,aAAa,EAAEf,MAAM,CAACG,MAAM,CAAC,CAAC;EAElC,MAAMe,cAAc,GAAGxB,WAAW,CAAC,MAAM;IACvCqB,aAAa,CAAC,CAAC;IACfR,eAAe,CAAEU,IAAI,IAAK,CAACA,IAAI,GAAG,CAAC,GAAGjB,MAAM,CAACG,MAAM,IAAIH,MAAM,CAACG,MAAM,CAAC;EACvE,CAAC,EAAE,CAACY,aAAa,EAAEf,MAAM,CAACG,MAAM,CAAC,CAAC;;EAElC;EACAV,SAAS,CAAC,MAAM;IACd,IAAIe,QAAQ,EAAE;IAEd,MAAMW,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjCT,WAAW,CAAEM,IAAI,IAAK;QACpB,IAAIA,IAAI,IAAI,GAAG,EAAE;UACfD,UAAU,CAAC,CAAC;UACZ,OAAO,CAAC;QACV;QACA,OAAOC,IAAI,GAAI,GAAG,IAAIH,aAAa,GAAG,GAAG,CAAE;MAC7C,CAAC,CAAC;IACJ,CAAC,EAAE,GAAG,CAAC;IAEP,OAAO,MAAMO,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,CAACX,QAAQ,EAAEQ,UAAU,EAAEF,aAAa,CAAC,CAAC;;EAEzC;EACA,MAAMQ,aAAa,GAAG3B,YAAY,CAAC;IACjC4B,YAAY,EAAEP,UAAU;IACxBQ,aAAa,EAAEN,cAAc;IAC7BO,4BAA4B,EAAE,IAAI;IAClCC,UAAU,EAAE;EACd,CAAC,CAAC;EAEF,MAAMC,gBAAgB,GAAIC,CAAC,IAAK;IAC9Bf,iBAAiB,CAACgB,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC;IAC7BrB,WAAW,CAAC,IAAI,CAAC;EACnB,CAAC;EAED,MAAMsB,cAAc,GAAIH,CAAC,IAAK;IAC5B,MAAMI,aAAa,GAAGH,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGlB,cAAc;IACjDH,WAAW,CAAC,KAAK,CAAC;;IAElB;IACA,IAAIuB,aAAa,GAAG,GAAG,EAAE;MACvB;MACA,MAAMC,MAAM,GAAGL,CAAC,CAACM,cAAc,GAAGN,CAAC,CAACM,cAAc,CAAC,CAAC,CAAC,CAACC,OAAO,GAAGP,CAAC,CAACO,OAAO;MACzE,MAAMC,OAAO,GAAGR,CAAC,CAACS,aAAa;MAC/B,MAAMC,IAAI,GAAGF,OAAO,CAACG,qBAAqB,CAAC,CAAC;MAC5C,MAAMC,WAAW,GAAGP,MAAM,GAAGK,IAAI,CAACG,IAAI,GAAGH,IAAI,CAACI,KAAK,GAAG,CAAC;MAEvD,IAAIF,WAAW,EAAE;QACfxB,UAAU,CAAC,CAAC;MACd,CAAC,MAAM;QACLE,cAAc,CAAC,CAAC;MAClB;IACF;EACF,CAAC;EAED,oBACErB,OAAA;IAAK8C,SAAS,EAAC,+DAA+D;IAAAC,QAAA,eAC5E/C,OAAA;MACE8C,SAAS,EAAC,kEAAkE;MAC5EE,KAAK,EAAE;QAAEC,WAAW,EAAE;MAAU,CAAE;MAAA,GAC9BxB,aAAa;MACjByB,YAAY,EAAEpB,gBAAiB;MAC/BqB,UAAU,EAAEjB,cAAe;MAC3BkB,WAAW,EAAEtB,gBAAiB;MAC9BuB,SAAS,EAAEnB,cAAe;MAAAa,QAAA,gBAG1B/C,OAAA;QAAK8C,SAAS,EAAC,mDAAmD;QAAAC,QAAA,eAChE/C,OAAA;UACE8C,SAAS,EAAC,qBAAqB;UAC/BE,KAAK,EAAE;YACLH,KAAK,EAAE,GAAGhC,QAAQ,GAAG;YACrByC,UAAU,EAAE3C,QAAQ,GAAG,MAAM,GAAG;UAClC;QAAE;UAAA4C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAGN1D,OAAA;QAAK8C,SAAS,EAAC,wBAAwB;QAAAC,QAAA,eACrC/C,OAAA;UACE2D,GAAG,EAAExD,MAAM,CAACM,YAAY,CAAE;UAC1BmD,GAAG,EAAE,SAASnD,YAAY,GAAG,CAAC,EAAG;UACjCqC,SAAS,EAAC;QAA6E;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAGN1D,OAAA;QAAK8C,SAAS,EAAC,4BAA4B;QAAAC,QAAA,gBACzC/C,OAAA;UAAK8C,SAAS,EAAC;QAAc;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAChC1D,OAAA;UAAK8C,SAAS,EAAC;QAAc;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACxD,EAAA,CA/GID,OAAO;EAAA,QAwCWH,YAAY;AAAA;AAAA+D,EAAA,GAxC9B5D,OAAO;AAiHb,eAAeA,OAAO;AAAC,IAAA4D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}